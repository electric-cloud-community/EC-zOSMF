---

#perl RESTPluginWizard/build.pl --plugin-wizard-folder ./PluginWizard --plugin-name EC-zOSMF --config EC-zOSMF/config/EC-zOSMF.yaml --workspace . &&  rsync -avz --delete ./EC-zOSMF/ --exclude '.git' nick@10.200.1.150:EC-zOSMF/
#&& sshpass -p "" ssh 10.200.1.150 "cd ~ && ./i_zOSMF.sh"
# This block refers to auto help generation
help:
  title: Electric Flow integration for zOSMF
  description: |
    This plugin allows to work with zOSMF REST API.
  links:
    - https://www.ibm.com/support/knowledgecenter/SSLTBW_2.1.0/com.ibm.zos.v2r1.izua700/IZUHPINFO_RESTServices.htm
  hasConfig: true
procedures:
####Jobs section
  - name: Jobs - Submit a job
    stepName: jobs - submit a job
    description: You can use this operation to submit a job to run on z/OS.
    # https://{instance}/DefaultCollection/_apis/wit/workitems?api-version={version}&ids={string}[&fields={string}&asOf={DateTime}&$expand={enum{relations}&ErrorPolicy={string}]
    endpoint: '/restjobs/jobs'
    #  #{{instance}} means that "instance" will ba taken from config
    # #{repository} will be taken from the procedure parameters
    method: PUT
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
    contentType: text/plain
     # credentials will be attached to the procedure
    basicAuth: true
     # credentials will be turned into basic auth header
    # if no credentials found, the procedure won't fail, the request will be made without credentials

    # The result will be saved in this property
    resultProperty:
      show: true
      # Selectbox with formats will appear
      format:
        - json
        - propertySheet
      default: /myJob/submitJob
    parameters:
      - property: JESB
        type: entry
        label: JESB
        documentation: Represents an optionally-specified secondary JES subsystem. If you omit this value, the request is processed by the primary JES subsystem.
        required: 0
      - property: Content-Type
        label: Content-Type
        type: select
        in: header
        value: __IS__NOT__SET__
        refiner: convert_not_set
        option:
          - name: not set
            value: __IS__NOT__SET__
          - name: text/plain
            value: text/plain
          - name: application/octet-stream
            value: application/octet-stream    
          - name: application/json
            value: application/json  
        documentation: Set to text/plain when the optional header X-IBM-Intrdr-Mode is set to TEXT or is omitted, and the job JCL is included in the request. Set to application/octet-stream when optional header X-IBM-Intrdr-Mode is set to RECORD or BINARY, and the JCL for the job to be submitted is included in the HTTP request. Set to application/json when the job to be submitted resides in a data set or UNIX file, which is identified in a JSON document (included as input with this request).
        required: 0
      - property: X-IBM-Intrdr-Class
        label: X-IBM-Intrdr-Class
        type: entry
        in: header
        refiner: remove_blank_header
        documentation: A single character that specifies the internal reader class; the default is A. This value defines the default message class (MSGCLASS) for the job.
        required: 0
      - property: X-IBM-Intrdr-Recfm
        label: X-IBM-Intrdr-Recfm
        type: select
        in: header
        value: __IS__NOT__SET__
        refiner: convert_not_set
        option:
          - name: not set
            value: __IS__NOT__SET__
          - name: F
            value: F
          - name: V
            value: V
        documentation: A single character that specifies the internal reader record format - F or V. When submitting a job from a data set, you can omit this header. Otherwise, this value must match the record format of the data set. When not submitting a job from a data set, if you omit this header or specify a value other than F or V, the default of F is used.
        required: 0
      - property: X-IBM-Intrdr-Lrecl
        in: header
        type: entry
        label: X-IBM-Intrdr-Lrecl
        refiner: remove_blank_header
        #  - convert_to_int
        validators:
          - is_int
        documentation: An integer value specifying the internal reader logical record length (LRECL). When submitting a job from a data set, you can omit this header. Otherwise, this value must match the LRECL of the data set. When not submitting a job from a data set, if you omit this header or specify a non-integer value, the default of 80 is used.
        required: 0
      - property: X-IBM-Intrdr-Mode
        label: X-IBM-Intrdr-Mode
        type: select
        in: header
        value: __IS__NOT__SET__
        refiner: convert_not_set
        option:
          - name: not set
            value: __IS__NOT__SET__
          - name: TEXT
            value: TEXT
          - name: RECORD
            value: RECORD
          - name: BINARY
            value: BINARY  
        documentation: |-
          A keyword that specifies the format of the input job: TEXT, RECORD, or BINARY.
          When submitting a job from a data set, you can omit this header. Otherwise, this value must be set to RECORD.
          When not submitting a job from a data set, observe the following rules:
          - If you omit this header, the TEXT keyword is used by default.
          - If you specify the BINARY keyword, the X-IBM-Intrdr-Recfm header must be omitted or set to F (the default).
          - If you specify the RECORD keyword or BINARY keyword, you must set Content-Type to application/octet-stream.
        required: 0
      - property: X-IBM-User-Correlator
        label: X-IBM-User-Correlator
        type: entry
        in: header
        refiner: remove_blank_header
        documentation: |-
          Specifies the user portion of the job correlator. In z/OS, a job correlator can be used to associate each job with a unique 64-character value, which provides you with a means to query a job in the system and track it through execution.
          A job correlator consists of a 31-byte system-defined portion and a colon character (:), followed by a 32-byte user portion. The system-defined portion contains the following values:
          8-byte job ID
          8-byte MAS name for the system on which the job resides
          8-byte sequence value
          7-bytes of reserved space.
          Following the system value is the colon character (:) separator and the second string: an optional 32-character user-defined value (the user portion). This value is 1 - 32 characters in length, where the first character must be uppercase alphabetic (A-Z) or special ($, #, @). The remaining characters (up to 31) can be any combination of uppercase alphabetic, numeric (0-9), or special. Blank characters are not supported.

          If specified, the user portion is combined with the system portion, producing the full job correlator that will be returned in the job-correlator property of the JSON job document. If the user portion is not specified, the returned job correlator is the 32-byte system value, ending with the colon (:).

          If this header is specified when JES3 is the primary job entry subsystem, an error will result and no job is submitted.
        required: 0
      - property: X-IBM-JCL-Symbol-name
        label: X-IBM-JCL-Symbol-name
        type: entry
        in: header
        refiner: remove_blank_header
        documentation: |-
          Specifies the name and value for a JCL symbol. The symbol name is included in the header, at the name position. The characters following 'X-IBM-JCL-Symbol-' up to the colon separator (:) form the symbol name. The data following the colon specifies the value for the symbol.
          A symbol name is 1 - 8 characters, where the first character must be uppercase alphabetic (A-Z) or special ($, #, @). The remaining characters (up to 7) can be any combination of uppercase alphabetic, numeric (0-9), or special.

          A symbol value is limited to 255 characters. Multiple symbol names and values can be specified, up to a limit of 128.

          Example: X-IBM-JCL-Symbol-MBR: ABC specifies symbol name MBR with value ABC. Specifying this custom header and submitting a job that uses //MYDD DSN=MY.DATASET(&MBR.),DISP=SHR in the JCL will cause ABC to be substituted as the member name.

          If this header is specified when JES3 is the primary job entry subsystem, an error will result and no job will be submitted.
        required: 0
      - property: X-IBM-Notification-URL
        label: X-IBM-Notification-URL
        type: entry
        in: header
        refiner: remove_blank_header
        documentation: "Specifies a destination URL for receiving an HTTP POST when the job is no longer eligible for execution (that is, when the job reaches the output queue or purge queue). The notification is in the form of a JSON document (Content-Type: application/json), which contains job status information."
        required: 0
      - property: file
        label: file
        type: entry
        documentation: |-
          File to be run from z/OS, application/json mode. Examples: 
          - Partitioned data set (fully qualified)    : //'MYJOBS.TEST.CNTL(TESTJOBX)'
          - Partitioned data set (non-fully qualified): //TEST.CNTL(TESTJOBX)
          - Sequential data set                       : //'MYJOBS.TEST.JOB1'
          - UNIX file                                 : /u/myjobs/job1
        required: 0
      - property: code
        type: textarea
        label: Code
        documentation: Code that is going to be run from request in text/plain or application/octet-stream modes.
        required: 0
      
####Data Set Section

# List the z/OS data sets on a system Start of changeGET /zosmf/restfiles/ds?dslevel=<dataset_name_pattern>[&volser=<volser>&start=<dsname>]End of change
  - name: Data Set - List
    stepName: data set - list zOS data sets on a system
    description: List the z/OS data sets on a system.
    # https://{instance}/DefaultCollection/_apis/wit/workitems?api-version={version}&ids={string}[&fields={string}&asOf={DateTime}&$expand={enum{relations}&ErrorPolicy={string}]
    endpoint: '/restfiles/ds'
    #  #{{instance}} means that "instance" will ba taken from config
    # #{repository} will be taken from the procedure parameters
    method: GET
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: true
     # credentials will be turned into basic auth header
    # if no credentials found, the procedure won't fail, the request will be made without credentials

    # The result will be saved in this property
    resultProperty:
      show: true
      # Selectbox with formats will appear
      format:
        - json
        - propertySheet
      default: /myJob/datasetList
    parameters:
      - property: dslevel
        in: query
        type: entry
        label: Dslevel
        documentation: The search parameter that identifies the cataloged data sets to be listed.
        required: 1
      - property: volser
        in: query
        type: entry
        label: Volser
        documentation: A parameter that identifies the volume serials to be searched for data sets with names that match the specified dslevel parameter.
        required: 0
      - property: start_num
        in: query
        type: entry
        label: Start
        documentation: An optional search parameter that specifies the first data set name to return in the response document. The length of the data set name that you specify cannot exceed 44 characters, and cannot contain wildcards. If the data set name is not found for the given search, then the next data set matching the search will be returned.
        required: 0
      - property: X-IBM-Attributes
        label: X-IBM-Attributes. If not set - dsname used.
        type: select
        in: header
        value: __IS__NOT__SET__
        refiner: convert_not_set
        option:
          - name: not set
            value: __IS__NOT__SET__
          - name: dsname
            value: dsname
          - name: base
            value: base
          - name: vol
            value: vol
        documentation: Extends search.
      - property: X-IBM-Max-Items
        in: header
        type: entry
        label: Max items returned (1000 max, 0 means no limit)
        value: 0
        refiner: remove_blank_header
        documentation: This header value specifies the maximum number of items to return. To request that all items be returned, set this header to 0. If you omit this header, or specify an incorrect value, up to 1000 items are returned by default.
        required: 0
      - property: totalRows
        type: checkbox
        label: Return totalRows
        documentation: If checked, then "totalRows" property is returned if more data sets than the maximum requested are available.
        required: 0





# List the members of a z/OS data set Start of changeGET /zosmf/restfiles/ds/<dataset_name>/member?start=<member>&pattern=<mem-pat>End of change

# Retrieve the contents of a z/OS data set or member  GET /zosmf/restfiles/ds/[-(<volser>)/]<data-set-name>[(<member-name>)]
  - name: Data Set - Read data
    stepName: data set - retrieve the contents of a zOS data set or member
    description: You can use this operation to retrieve the contents of a sequential data set, or a member of a partitioned data set (PDS or PDSE). To retrieve the contents of an uncataloged data set, include the volume serial on the request.
    # https://{instance}/DefaultCollection/_apis/wit/workitems?api-version={version}&ids={string}[&fields={string}&asOf={DateTime}&$expand={enum{relations}&ErrorPolicy={string}]
    endpoint: '/restfiles/ds/#{dataset-name}'
    #[-(<volser>)/]<data-set-name>[(<member-name>)]
    #  #{{instance}} means that "instance" will ba taken from config
    # #{repository} will be taken from the procedure parameters
    method: GET
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: true
     # credentials will be turned into basic auth header
    # if no credentials found, the procedure won't fail, the request will be made without credentials

    # The result will be saved in this property
    resultProperty:
      show: true
      # Selectbox with formats will appear
      format:
        - json
        - propertySheet
      default: /myJob/readDataset
    parameters:
      - property: dataset-name
        type: entry
        label: Data set name
        documentation: The name of a z/OS data set that you are going to create.
        required: 1
      - property: volser
        type: entry
        label: Volser
        documentation: A parameter that identifies the volume serials to be searched for data sets with names that match the specified dslevel parameter.
        required: 0
      - property: member-name
        type: entry
        label: Member name
        documentation: Identifies the name of the PDS or PDSE member to which to write. Include this parameter for a PDS or PDSE member write request.
        required: 0
      - property: If-None-Match
        label: If-None-Match
        type: entry
        in: header
        refiner: remove_blank_header
        documentation: This header is optional; use it to specify the ETag token to be used to correlate this request with a previous request. If the data on the z/OS host has not changed since the ETag token was generated, z/OSMF returns a status of HTTP 304 Not Modified. For the initial request to the resource, you can omit this header.
      - property: X-IBM-Data-Type
        label: X-IBM-Data-Type
        type: select
        in: header
        value: __IS__NOT__SET__
        refiner: convert_not_set
        option:
          - name: not set
            value: __IS__NOT__SET__
          - name: text
            value: text
          - name: binary
            value: binary
          - name: record
            value: record
        documentation: This header is optional; use it to indicate whether data conversion is to be performed on the returned data. When set to text, data conversion is performed. The data transfer process converts each record from EBCDIC to the charset specified on the "Content-Type" header of the request. If no charset is specified, the default is ISO8859-1. A newline (NL) character from the response charset is inserted between logical records. For data sets with fixed-length records, trailing blanks are removed. When set to binary, no data conversion is performed. The data transfer process returns each record as-is, without translation. No delimiters are added between records. The response Content-Type is "application/octet-stream". When set to record, no data conversion is performed. Each logical record is preceded by the 4-byte big endian record length of the record that follows. This length does not include the prefix length. So, a zero-length record is 4 bytes of zeros with nothing following. If you omit this header, the default is text; the response is converted.
      - property: X-IBM-Return-Etag
        label: X-IBM-Return-Etag
        type: select
        in: header
        value: __IS__NOT__SET__
        refiner: convert_not_set
        option:
          - name: not set
            value: __IS__NOT__SET__
          - name: true
            value: true
        documentation: This header is optional; set it to 'true' to force the response to include an "Etag" header, regardless of the size of the response data. If this header is not present or set to something other than 'true', then the default is to only send an Etag in the response for data sets smaller than a system determined length, which is at least 8MB. Start of changeIf X-IBM-Record-Range is present, then this header may not be specified with the value "true" and an Etag will never be returned.End of change. If this header is enabled for very large data sets, then performance is impacted since the data set must be read twice by the system.
      - property: X-IBM-Migrated-Recall
        label: X-IBM-Migrated-Recall
        type: select
        in: header
        value: __IS__NOT__SET__
        refiner: convert_not_set
        option:
          - name: not set
            value: __IS__NOT__SET__
          - name: wait
            value: wait
          - name: nowait
            value: nowait
          - name: record
            value: nowait
        documentation: This header is optional; use it to specify how a migrated data set is handled. By default, a migrated data set is recalled synchronously.
      - property: X-IBM-Obtain-ENQ
        label: X-IBM-Obtain-ENQ
        type: select
        in: header
        value: __IS__NOT__SET__
        refiner: convert_not_set
        option:
          - name: not set
            value: __IS__NOT__SET__
          - name: None
            value: 
          - name: EXCL
            value: EXCL
          - name: SHRW
            value: SHRW        
        documentation: This header is optional; set it to one of the following values to request that a system ENQ be obtained and held after the completion of this request. If not specified, then no ENQs will be held after the completion of this request. A successful response will include an X-IBM-Session-Ref response header that can be added as a request header to subsequent requests to specify affinity to the TSO address space holding this ENQ.
      - property: X-IBM-Session-Ref
        label: X-IBM-Session-Ref
        type: entry
        in: header
        refiner: remove_blank_header
        documentation: This header is optional; include it with the value returned from a previous X-IBM-Session-Ref response header to indicate that your request should be executed in the TSO address space that was previously reserved with a X-IBM-Obtain-ENQ request header. This address space will not be used for other requests and if not used at least once every 10 minutes it will be terminated. The X-IBM-Obtain-ENQ and X-IBM-Session-Ref headers are mutually exclusive.
      - property: X-IBM-Release-ENQ
        label: X-IBM-Release-ENQ
        type: entry
        in: header
        refiner: remove_blank_header
        documentation: This header is optional; it may be specified with a value "true" to request that the ENQ held by the associated TSO address space be released. This header must be specified along with a valid X-IBM-Session-Ref header.


#----

# Write data to a z/OS data set or member PUT /zosmf/restfiles/ds/[-(<volser>)/]<data-set-name>[(<member-name>)]
  - name: Data Set - Write data
    stepName: data set - write data to a zos data set or member
    description: You can use this operation to write data to an existing sequential data set, or a member of a partitioned data set (PDS or PDSE). To write to an uncataloged data set, include a volume serial on the request.
    # https://{instance}/DefaultCollection/_apis/wit/workitems?api-version={version}&ids={string}[&fields={string}&asOf={DateTime}&$expand={enum{relations}&ErrorPolicy={string}]
    endpoint: '/restfiles/ds/#{dataset-name}'
    #[-(<volser>)/]<data-set-name>[(<member-name>)]
    #  #{{instance}} means that "instance" will ba taken from config
    # #{repository} will be taken from the procedure parameters
    method: PUT
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: true
     # credentials will be turned into basic auth header
    # if no credentials found, the procedure won't fail, the request will be made without credentials

    # The result will be saved in this property
    resultProperty:
      show: true
      # Selectbox with formats will appear
      format:
        - json
        - propertySheet
      default: /myJob/createDataset
    parameters:
      - property: dataset-name
        type: entry
        label: Data set name
        documentation: The name of a z/OS data set that you are going to create.
        required: 1
      - property: volser
        type: entry
        label: Volser
        documentation: A parameter that identifies the volume serials to be searched for data sets with names that match the specified dslevel parameter.
        required: 0
      - property: member-name
        type: entry
        label: Member name
        documentation: Identifies the name of the PDS or PDSE member to which to write. Include this parameter for a PDS or PDSE member write request.
        required: 0
      - property: Content-Type
        in: header
        type: entry
        label: Content Type
        refiner: remove_blank_header
        documentation: The data is interpreted according to the content-type as one of binary, text, record or 'diff -e' format according a combination of the "Content-Type" and the value of the X-IBM-Data-Type custom header, if present.
        required: 0
      - property: X-IBM-Data-Type
        label: X-IBM-Data-Type
        type: select
        in: header
        value: __IS__NOT__SET__
        refiner: convert_not_set
        option:
          - name: not set
            value: __IS__NOT__SET__
          - name: text
            value: text
          - name: binary
            value: binary
          - name: record
            value: record
        documentation: When set to 'text' and "Content-Type" is "application/x-ibm-diff-e", the input consists of commands in the same format as produced by the z/OS UNIX 'diff -e' command. These commands are used to add, replace and delete lines in the target data set.
      - property: X-IBM-Migrated-Recall
        label: X-IBM-Migrated-Recall
        type: select
        in: header
        value: __IS__NOT__SET__
        refiner: convert_not_set
        option:
          - name: not set
            value: __IS__NOT__SET__
          - name: wait
            value: wait
          - name: nowait
            value: nowait
          - name: record
            value: nowait
        documentation: This header is optional; use it to specify how a migrated data set is handled. By default, a migrated data set is recalled synchronously.
      - property: X-IBM-Obtain-ENQ
        label: X-IBM-Obtain-ENQ
        type: select
        in: header
        value: __IS__NOT__SET__
        refiner: convert_not_set
        option:
          - name: not set
            value: __IS__NOT__SET__
          - name: EXCL
            value: EXCL
          - name: SHRW
            value: SHRW        
        documentation: This header is optional; set it to one of the following values to request that a system ENQ be obtained and held after the completion of this request. If not specified, then no ENQs will be held after the completion of this request. A successful response will include an X-IBM-Session-Ref response header that can be added as a request header to subsequent requests to specify affinity to the TSO address space holding this ENQ.
      - property: X-IBM-Session-Ref
        label: X-IBM-Session-Ref
        type: entry
        in: header
        refiner: remove_blank_header
        documentation: This header is optional; include it with the value returned from a previous X-IBM-Session-Ref response header to indicate that your request should be executed in the TSO address space that was previously reserved with a X-IBM-Obtain-ENQ request header. This address space will not be used for other requests and if not used at least once every 10 minutes it will be terminated. The X-IBM-Obtain-ENQ and X-IBM-Session-Ref headers are mutually exclusive.
      - property: X-IBM-Release-ENQ
        label: X-IBM-Release-ENQ
        type: entry
        in: header
        refiner: remove_blank_header
        documentation: This header is optional; it may be specified with a value "true" to request that the ENQ held by the associated TSO address space be released. This header must be specified along with a valid X-IBM-Session-Ref header.
      - property: stored-data
        label: Data
        type: textarea
        in: body
        documentation: The data to write to dataset.



# Start of changeCreate a sequential and partitioned data setEnd of change  Start of changePOST /zosmf/restfiles/ds/<data-set-name>End of change
  - name: Data Set - Create
    stepName: data set - create a sequential and partitioned data set
    description: You can use this operation to create sequential and partitioned data sets on a z/OS system.
    # https://{instance}/DefaultCollection/_apis/wit/workitems?api-version={version}&ids={string}[&fields={string}&asOf={DateTime}&$expand={enum{relations}&ErrorPolicy={string}]
    endpoint: '/restfiles/ds/#{dataset-name}'
    #  #{{instance}} means that "instance" will ba taken from config
    # #{repository} will be taken from the procedure parameters
    method: POST
    contentType: application/json
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: true
     # credentials will be turned into basic auth header
    # if no credentials found, the procedure won't fail, the request will be made without credentials

    # The result will be saved in this property
    resultProperty:
      show: true
      # Selectbox with formats will appear
      format:
        - json
        - propertySheet
      default: /myJob/createDataset
    parameters:
      - property: dataset-name
        type: entry
        label: Data set name
        documentation: The name of a z/OS data set that you are going to create.
        required: 1
      - property: volser
        in: body
        type: entry
        label: Volser
        documentation: A parameter that identifies the volume serials to be searched for data sets with names that match the specified dslevel parameter.
        required: 0
      - property: unit
        in: body
        type: entry
        label: Unit
        documentation: Device type.
        required: 0
      - property: dsorg
        in: body
        type: entry
        label: Dsorg
        documentation: Data set organization.
        required: 0
      - property: alcunit
        in: body
        type: entry
        label: Alcunit
        documentation: Unit of space allocation.
        required: 0
      - property: primary
        in: body
        type: entry
        label: Primary
        refiner: convert_to_int
        validators:
          - is_int
        documentation: Primary space allocation.
        required: 0
      - property: secondary
        in: body
        type: entry
        label: Secondary
        refiner: convert_to_int
        validators:
          - is_int
        documentation: Secondary space allocation.
        required: 0
      - property: dirblk
        in: body
        type: entry
        label: Dirblk
        refiner: convert_to_int
        validators:
          - is_int
        documentation: Number of directory blocks.
        required: 0
      - property: avgblk
        in: body
        type: entry
        label: Avgblk
        refiner: convert_to_int
        validators:
          - is_int
        documentation: Average block.
        required: 0
      - property: recfm
        in: body
        type: entry
        label: Recfm
        documentation: Record format.
        required: 0
      - property: blksize
        in: body
        type: entry
        label: Blksize
        refiner: convert_to_int
        validators:
          - is_int
        documentation: Block size.
        required: 0
      - property: lrecl
        in: body
        type: entry
        label: Lrecl
        refiner: convert_to_int
        validators:
          - is_int
        documentation: Record length.
        required: 0
      - property: storeclass
        in: body
        type: entry
        label: Storeclass
        documentation: Storage class.
        required: 0
      - property: mgntclass
        in: body
        type: entry
        label: Mgntclass
        documentation: Storage class.
        required: 0
      - property: dataclass
        in: body
        type: entry
        label: Dataclass
        documentation: Data class.
        required: 0

# Start of changeDelete a sequential and partitioned data setEnd of change  Start of changeDELETE /zosmf/restfiles/ds/<data-set-name>
#---
# DELETE /zosmf/restfiles/ds/-(<volume>)/<data-set-name>
  - name: Data Set - Delete
    stepName: data set - delete a sequential and partitioned data set
    description: You can use this operation to delete sequential and partitioned data sets on a z/OS system.
    # https://{instance}/DefaultCollection/_apis/wit/workitems?api-version={version}&ids={string}[&fields={string}&asOf={DateTime}&$expand={enum{relations}&ErrorPolicy={string}]
    endpoint: '/restfiles/ds/#{dataset-name}'
    #[-(<volser>)/]<data-set-name>[(<member-name>)]
    #  #{{instance}} means that "instance" will ba taken from config
    # #{repository} will be taken from the procedure parameters
    method: DELETE
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: true
     # credentials will be turned into basic auth header
    # if no credentials found, the procedure won't fail, the request will be made without credentials

    # The result will be saved in this property
    resultProperty:
      show: true
      # Selectbox with formats will appear
      format:
        - json
        - propertySheet
      default: /myJob/deleteDataset
    parameters:
      - property: dataset-name
        type: entry
        label: Data set name
        documentation: The name of a z/OS data set, that you are going to delete.
        required: 1
      - property: volume
        type: entry
        label: Volume
        documentation:  Volume is where the data set is resided, when the data set is uncatalogued.
        required: 0
      



# End of change
# Start of changeDelete a partitioned data set memberEnd of change  Start of changeDELETE /zosmf/restfiles/ds/<dataset-name>(<member-name>)End of change
# Start of changez/OS Data set and member utilitiesEnd of change  Start of changePUT /zosmf/restfiles/ds/<to-data-set-name>End of change
# Start of changeAccess Method Services InterfaceEnd of change  Start of changePUT /zosmf/restfiles/amsEnd of change
# List the files and directories of a UNIX file path  GET /zosmf/restfiles/fs?path=<file-path-name>

#---

# Retrieve the contents of a z/OS UNIX file GET /zosmf/restfiles/fs/<file-path-name>
# Write data to a z/OS UNIX file  PUT /zosmf/restfiles/fs/<filepath-name>

#---
# Start of changeCreate a UNIX file or directoryEnd of change Start of changePOST /zosmf/restfiles/fs/<file-path-name>End of change
# Start of changeDelete a UNIX file or directoryEnd of change Start of changeDELETE /zosmf/restfiles/fs/<file-pathname>End of change
# Start of changez/OS UNIX file utilitiesEnd of change  Start of changePUT /zosmf/restfiles/fs/<file-path-name>End of change
# Start of changeList z/OS UNIX FilesystemsEnd of change  Start of changeGET /zosmf/restfiles/mfs/End of change
# Start of changeCreate z/OS UNIX zFS FilesystemEnd of change Start of changePOST /zosmf/restfiles/mfs/zfs/<file-system-name>End of change
# Start of changeDelete z/OS UNIX zFS FilesystemEnd of change Start of changeDELETE /zosmf/restfiles/mfs/zfs/<file-system-name>End of change
# Start of changeMount a UNIX file systemEnd of change  Start of changePUT /zosmf/restfiles/mfs/<file-system-name>End of change
# Start of changeUnmount a UNIX file systemEnd of change  Start of changePUT /zosmf/restfiles/mfs/<file-system-name>End of change
  - name: Jobs - Spool files list
    stepName: jobs - spool files list
    description: You can use this operation to list the spool files for a batch job on z/OS.
    # https://{instance}/DefaultCollection/_apis/wit/workitems?api-version={version}&ids={string}[&fields={string}&asOf={DateTime}&$expand={enum{relations}&ErrorPolicy={string}]
    endpoint: '/restjobs/jobs/'
    #[-(<volser>)/]<data-set-name>[(<member-name>)]
    #  #{{instance}} means that "instance" will ba taken from config
    # #{repository} will be taken from the procedure parameters
    method: GET
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: true
     # credentials will be turned into basic auth header
    # if no credentials found, the procedure won't fail, the request will be made without credentials

    # The result will be saved in this property
    resultProperty:
      show: true
      # Selectbox with formats will appear
      format:
        - json
        - propertySheet
      default: /myJob/getSpoolFiles
    parameters:
      - property: jobname
        type: entry
        label: Jobname
        documentation: Identifies the job for which the spool files are to be listed. Use either the job name and job ID combination or the job correlator to identify the job.
        required: 0
      - property: jobid
        type: entry
        label: Jobid
        documentation:  Identifies the job for which the spool files are to be listed. Use either the job name and job ID combination or the job correlator to identify the job.
        required: 0
      - property: correlator
        type: entry
        label: Correlator
        documentation: |-  
          Identifies the job for which the spool files are to be listed. Use either the job name and job ID combination or the job correlator to identify the job.
          To use a job correlator on this request, specify the full job correlator for the job: The 31-byte system portion, a semicolon, and the user portion (up to 32 bytes). The correlator can be one that you have obtained from the "job-correlator" property in a returned JSON job document. Alternatively, you can specify the complete URL as provided in the "url" property of a JSON job document.
        required: 0


