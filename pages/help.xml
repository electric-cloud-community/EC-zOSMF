<!-- HELP GEN VERSION 1 -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta content="text/html; charset=us-ascii" http-equiv="content-type" />
    <title><!-- TITLE BEGIN -->Electric Flow integration for zOSMF<!-- TITLE END --></title>
    <link rel="stylesheet" href="../../plugins/@PLUGIN_KEY@/pluginhelp.css" type="text/css" media="screen" />
</head>
<!-- REST PLUGIN WIZARD HELP -->
<body>
    <div class="help">
        <h1>@PLUGIN_KEY@</h1>
        <p>Plugin Version @PLUGIN_VERSION@</p>
        <hr style="margin-left: -10px; margin-top: 10px; height: 1px; width: 100%; color: #5981BD;" noshade="noshade" />
        <p>Revised on <!-- REVISION DATE BEGIN -->November 3, 2017<!-- REVISION DATE END --></p>
        <p>
            <!-- DESCRIPTION BEGIN -->This plugin allows to work with zOSMF REST API.
<!-- DESCRIPTION END -->
        </p>
        <h2>Links</h2>
        <!-- LINKS BEGIN -->
<a href="https://www.ibm.com/support/knowledgecenter/SSLTBW_2.1.0/com.ibm.zos.v2r1.izua700/IZUHPINFO_RESTServices.htm" target="_blank">https://www.ibm.com/support/knowledgecenter/SSLTBW_2.1.0/com.ibm.zos.v2r1.izua700/IZUHPINFO_RESTServices.htm</a>
<!-- LINKS END -->
        <h1>Contents</h1>
        <ul>
        <!-- TOC BEGIN --><li><a href="#SystemInfo">System - Info</a></li>
<li><a href="#DataSetList">Data Set - List</a></li>
<li><a href="#DataSetReaddata">Data Set - Read data</a></li>
<li><a href="#DataSetWritedata">Data Set - Write data</a></li>
<li><a href="#DataSetCreate">Data Set - Create</a></li>
<li><a href="#DataSetDelete">Data Set - Delete</a></li>
<li><a href="#JobsSpoolfileslist">Jobs - Spool files list</a></li>
<li><a href="#JobsGetspoolfilecontent">Jobs - Get spool file content</a></li>
<li><a href="#JobsSubmitajob">Jobs - Submit a job</a></li>
<li><a href="#JobsList">Jobs - List</a></li>
<li><a href="#JobsCancelandPurge">Jobs - Cancel and Purge</a></li>
<li><a href="#JobsObtainstatus">Jobs - Obtain status</a></li>
<li><a href="#ConsoleIssueCommand">Console - Issue Command</a></li>
<li><a href="#ConsoleCommandresponse">Console - Command response</a></li>
<li><a href="#ConsoleUnsolicitedmessagesresult">Console - Unsolicited messages result</a></li><!-- TOC END -->
        </ul>
        <h2>Configuration</h2>
        <div id="CreateConfiguration">
            <a name="CreateConfiguration" id="CreateConfigurationLink"></a>
            <h2>Plugin Configurations</h2>
            <p>
                Plugin configurations are sets of parameters that apply
                across some or all of the plugin procedures. They
                reduce repetition of common values, create
                predefined parameter sets for end users, and
                securely store credentials where needed. Each configuration
                is given a unique name that is entered in designated
                parameters on procedures that use them.<br /><br />
            </p>
            <h3>Creating Plugin Configurations</h3>
            <p>To create plugin configurations in ElectricFlow,
            do these steps:</p>
            <ol>
                <li>Go to <b>Administration</b> &gt; <b>Plugins</b> to open the Plugin Manager.</li>
                <li>Find the @PLUGIN_KEY@ row.</li>
                <li>Click <b>Configure</b> to open the
                @PLUGIN_KEY@ Configurations page.</li>
                <li>Click <b>Create Configuration</b>.</li>
                <li>To enable ElectricFlow server to communicate with the API,
                enter the following information:<br /></li>
                <!-- CONFIG PARAMS BEGIN -->
    <table class="grid">
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td class="required">
                    Server Configuration
                </td>
                <td>
                    zOSMF REST API configuration.
                </td>
            </tr>
            <tr>
                <td>
                    Description:
                </td>
                <td>
                    Description for the plugin configuration.
                </td>
            </tr>
            <tr>
                <td class="required">
                    Protocol:
                </td>
                <td>
                    Specifies whether to preceed hostname with https:// or leave http://
                </td>
            </tr>
            <tr>
                <td class="required">
                    Host:
                </td>
                <td>
                    Host name of the zOSMF API.
                </td>
            </tr>
            <tr>
                <td>
                    URL Path to zOSMF API, e.g. "/zosmf"
                </td>
                <td>
                    URL Path to zOSMF. Leave Blank if None.
                </td>
            </tr>
            <tr>
                <td class="required">
                    zOSMF server port, e.g. 10443:
                </td>
                <td>
                    zOSMF server port, e.g. 10443.
                </td>
            </tr>
            <tr>
                <td>
                    zOSMF Credentials
                </td>
                <td>
                     Will be used in basic authorization.
                </td>
            </tr>
        </tbody>
    </table><!-- CONFIG PARAMS END -->
            </ol>
            <p>The @PLUGIN_KEY@ Configurations page now shows the new configuration.</p>
            <h3>Editing Plugin Configurations</h3>
            <p>To edit plugin configurations in ElectricFlow,
            do these steps:</p>
            <ol>
                <li>Go to <b>Administration</b> &gt; <b>Plugins</b> to open the Plugin Manager.</li>
                <li>Find the @PLUGIN_KEY@ row.</li>
                <li>Click <b>Configure</b> to open the Configurations page.</li>
                <li>Find the configuration that you want to edit.</li>
                <li>Click <b>Edit</b>.</li>
                <li>Edit the parameters in the configuration.</li>
                <li>Click <b>OK</b> to save the modified configuration.</li>
            </ol>
        </div>
        <h1>Procedures</h1>
        <!-- PROCEDURES BEGIN -->
                <div id="Submitajob">
                <!-- Submitajob METADATA BEGIN -->
                <h3>Submit a job</h3>
                <p>You can use this operation to submit a job to run on z/OS.</p>
                <!-- Submitajob METADATA END -->
                <!-- Submitajob BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td>JESB</td>
                    <td>Represents an optionally-specified secondary JES subsystem. If you omit this value, the request is processed by the primary JES subsystem.</td>
                </tr>
                <tr>
                    <td>Content Type</td>
                    <td>Set to text/plain when the optional header X-IBM-Intrdr-Mode is set to TEXT or is omitted, and the job JCL is included in the request. Set to application/octet-stream when optional header X-IBM-Intrdr-Mode is set to RECORD or BINARY, and the JCL for the job to be submitted is included in the HTTP request. Set to application/json when the job to be submitted resides in a data set or UNIX file, which is identified in a JSON document (included as input with this request).</td>
                </tr>
                <tr>
                    <td>X-IBM-Intrdr-Class</td>
                    <td>A single character that specifies the internal reader class; the default is A. This value defines the default message class (MSGCLASS) for the job.</td>
                </tr>
                <tr>
                    <td>X-IBM-Intrdr-Recfm</td>
                    <td>A single character that specifies the internal reader record format - F or V. When submitting a job from a data set, you can omit this header. Otherwise, this value must match the record format of the data set. When not submitting a job from a data set, if you omit this header or specify a value other than F or V, the default of F is used.</td>
                </tr>
                <tr>
                    <td>X-IBM-Intrdr-Lrecl</td>
                    <td>An integer value specifying the internal reader logical record length (LRECL). When submitting a job from a data set, you can omit this header. Otherwise, this value must match the LRECL of the data set. When not submitting a job from a data set, if you omit this header or specify a non-integer value, the default of 80 is used.</td>
                </tr>
                <tr>
                    <td>X-IBM-Intrdr-Mode</td>
                    <td></td>
                </tr>
                 </tbody>
            </table>
        <!-- Submitajob END -->
            </div>
                <div id="JobsSubmitajob">
                <!-- JobsSubmitajob METADATA BEGIN -->
            <h3>Jobs - Submit a job</h3>
            <p>You can use this operation to submit a job to run on z/OS.</p>
        <!-- JobsSubmitajob METADATA END -->
                <!-- JobsSubmitajob BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td>JESB</td>
                    <td>Represents an optionally-specified secondary JES subsystem. If you omit this value, the request is processed by the primary JES subsystem.</td>
                </tr>
                <tr>
                    <td>Content-Type</td>
                    <td>Set to text/plain when the optional header X-IBM-Intrdr-Mode is set to TEXT or is omitted, and the job JCL is included in the request. Set to application/octet-stream when optional header X-IBM-Intrdr-Mode is set to RECORD or BINARY, and the JCL for the job to be submitted is included in the HTTP request. Set to application/json when the job to be submitted resides in a data set or UNIX file, which is identified in a JSON document (included as input with this request).</td>
                </tr>
                <tr>
                    <td>X-IBM-Intrdr-Class</td>
                    <td>A single character that specifies the internal reader class; the default is A. This value defines the default message class (MSGCLASS) for the job.</td>
                </tr>
                <tr>
                    <td>X-IBM-Intrdr-Recfm</td>
                    <td>A single character that specifies the internal reader record format - F or V. When submitting a job from a data set, you can omit this header. Otherwise, this value must match the record format of the data set. When not submitting a job from a data set, if you omit this header or specify a value other than F or V, the default of F is used.</td>
                </tr>
                <tr>
                    <td>X-IBM-Intrdr-Lrecl</td>
                    <td>An integer value specifying the internal reader logical record length (LRECL). When submitting a job from a data set, you can omit this header. Otherwise, this value must match the LRECL of the data set. When not submitting a job from a data set, if you omit this header or specify a non-integer value, the default of 80 is used.</td>
                </tr>
                <tr>
                    <td>X-IBM-Intrdr-Mode</td>
                    <td><pre>A keyword that specifies the format of the input job: TEXT, RECORD, or BINARY.
When submitting a job from a data set, you can omit this header. Otherwise, this value must be set to RECORD.
When not submitting a job from a data set, observe the following rules:
- If you omit this header, the TEXT keyword is used by default.
- If you specify the BINARY keyword, the X-IBM-Intrdr-Recfm header must be omitted or set to F (the default).
- If you specify the RECORD keyword or BINARY keyword, you must set Content-Type to application/octet-stream.</pre></td>
                </tr>
                <tr>
                    <td>X-IBM-User-Correlator</td>
                    <td></td>
                </tr>
                <tr>
                    <td>X-IBM-JCL-Symbol-name</td>
                    <td><pre>Specifies the name and value for a JCL symbol. The symbol name is included in the header, at the name position. The characters following 'X-IBM-JCL-Symbol-' up to the colon separator (:) form the symbol name. The data following the colon specifies the value for the symbol.
A symbol name is 1 - 8 characters, where the first character must be uppercase alphabetic (A-Z) or special ($, #, @). The remaining characters (up to 7) can be any combination of uppercase alphabetic, numeric (0-9), or special.
A symbol value is limited to 255 characters. Multiple symbol names and values can be specified, up to a limit of 128.
Example: X-IBM-JCL-Symbol-MBR: ABC specifies symbol name MBR with value ABC. Specifying this custom header and submitting a job that uses //MYDD DSN=MY.DATASET(&MBR.),DISP=SHR in the JCL will cause ABC to be substituted as the member name.
If this header is specified when JES3 is the primary job entry subsystem, an error will result and no job will be submitted.</pre></td>
                </tr>
                <tr>
                    <td>X-IBM-Notification-URL</td>
                    <td>Specifies a destination URL for receiving an HTTP POST when the job is no longer eligible for execution (that is, when the job reaches the output queue or purge queue). The notification is in the form of a JSON document (Content-Type: application/json), which contains job status information.</td>
                </tr>
                <tr>
                    <td>file</td>
                    <td><pre>File to be run from z/OS, application/json mode. Examples: 
- Partitioned data set (fully qualified)    : //'MYJOBS.TEST.CNTL(TESTJOBX)'
- Partitioned data set (non-fully qualified): //TEST.CNTL(TESTJOBX)
- Sequential data set                       : //'MYJOBS.TEST.JOB1'
- UNIX file                                 : /u/myjobs/job1</pre></td>
                </tr>
                <tr>
                    <td>Code</td>
                    <td>Code that is going to be run from request in text/plain or application/octet-stream modes.</td>
                </tr>
                 </tbody>
            </table>
        <!-- JobsSubmitajob END -->
            </div>
                <div id="11">
                <!-- 11 METADATA BEGIN -->
                <h3>11</h3>
                <p>List the z/OS data sets on a system.</p>
                <!-- 11 METADATA END -->
                <!-- 11 BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td class="required">Dslevel</td>
                    <td>The search parameter that identifies the cataloged data sets to be listed.</td>
                </tr>
                <tr>
                    <td>Volser</td>
                    <td>A parameter that identifies the volume serials to be searched for data sets with names that match the specified dslevel parameter.</td>
                </tr>
                <tr>
                    <td>Start</td>
                    <td>An optional search parameter that specifies the first data set name to return in the response document. The length of the data set name that you specify cannot exceed 44 characters, and cannot contain wildcards. If the data set name is not found for the given search, then the next data set matching the search will be returned.</td>
                </tr>
                 </tbody>
            </table>
        <!-- 11 END -->
            </div>
                <div id="DataSetListzOSdatasetsonasystem">
                <!-- DataSetListzOSdatasetsonasystem METADATA BEGIN -->
                <h3>Data Set - List zOS data sets on a system</h3>
                <p>List the z/OS data sets on a system.</p>
                <!-- DataSetListzOSdatasetsonasystem METADATA END -->
                <!-- DataSetListzOSdatasetsonasystem BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td class="required">Dslevel</td>
                    <td>The search parameter that identifies the cataloged data sets to be listed.</td>
                </tr>
                <tr>
                    <td>Volser</td>
                    <td>A parameter that identifies the volume serials to be searched for data sets with names that match the specified dslevel parameter.</td>
                </tr>
                <tr>
                    <td>Start</td>
                    <td>An optional search parameter that specifies the first data set name to return in the response document. The length of the data set name that you specify cannot exceed 44 characters, and cannot contain wildcards. If the data set name is not found for the given search, then the next data set matching the search will be returned.</td>
                </tr>
                <tr>
                    <td>X-IBM-Attributes. If not set - dsname used.</td>
                    <td>Extends search.</td>
                </tr>
                <tr>
                    <td>Max items returned (1000 max, 0 means no limit)</td>
                    <td>This header value specifies the maximum number of items to return. To request that all items be returned, set this header to 0. If you omit this header, or specify an incorrect value, up to 1000 items are returned by default.</td>
                </tr>
                <tr>
                    <td>Return totalRows</td>
                    <td>If checked, then "totalRows" property is returned if more data sets than the maximum requested are available.</td>
                </tr>
                 </tbody>
            </table>
        <!-- DataSetListzOSdatasetsonasystem END -->
            </div>
                <div id="DataSetCreateasequentialandpartitioneddataset">
                <!-- DataSetCreateasequentialandpartitioneddataset METADATA BEGIN -->
                <h3>Data Set - Create a sequential and partitioned data set</h3>
                <p>You can use this operation to create sequential and partitioned data sets on a z/OS system.</p>
                <!-- DataSetCreateasequentialandpartitioneddataset METADATA END -->
                <!-- DataSetCreateasequentialandpartitioneddataset BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td class="required">Data set name</td>
                    <td>The name of a z/OS data set that you are going to create.</td>
                </tr>
                <tr>
                    <td>Volser</td>
                    <td>A parameter that identifies the volume serials to be searched for data sets with names that match the specified dslevel parameter.</td>
                </tr>
                <tr>
                    <td>Unit</td>
                    <td>Device type.</td>
                </tr>
                <tr>
                    <td>Dsorg</td>
                    <td>Data set organization.</td>
                </tr>
                <tr>
                    <td>Alcunit</td>
                    <td>Unit of space allocation.</td>
                </tr>
                <tr>
                    <td>Primary</td>
                    <td>Primary space allocation.</td>
                </tr>
                <tr>
                    <td>Secondary</td>
                    <td>Secondary space allocation.</td>
                </tr>
                <tr>
                    <td>Dirblk</td>
                    <td>Number of directory blocks.</td>
                </tr>
                <tr>
                    <td>Avgblk</td>
                    <td>Average block.</td>
                </tr>
                <tr>
                    <td>Recfm</td>
                    <td>Record format.</td>
                </tr>
                <tr>
                    <td>Blksize</td>
                    <td>Block size.</td>
                </tr>
                <tr>
                    <td>Lrecl</td>
                    <td>Record length.</td>
                </tr>
                <tr>
                    <td>Storeclass</td>
                    <td>Storage class.</td>
                </tr>
                <tr>
                    <td>Mgntclass</td>
                    <td>Storage class.</td>
                </tr>
                <tr>
                    <td>Dataclass</td>
                    <td>Data class.</td>
                </tr>
                 </tbody>
            </table>
        <!-- DataSetCreateasequentialandpartitioneddataset END -->
            </div>
            <div id="DataSetWritedatatoazOSdatasetormember">
                <a name="DataSetWritedatatoazOSdatasetormember" id="DataSetWritedatatoazOSdatasetormember" />
                <h3>Data Set - Write data to a zOS data set or member</h3>
                <p>You can use this operation to write data to an existing sequential data set, or a member of a partitioned data set (PDS or PDSE). To write to an uncataloged data set, include a volume serial on the request.</p>
                <!-- DataSetWritedatatoazOSdatasetormember BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td class="required">Data set name</td>
                    <td>The name of a z/OS data set that you are going to create.</td>
                </tr>
                <tr>
                    <td>Volser</td>
                    <td>A parameter that identifies the volume serials to be searched for data sets with names that match the specified dslevel parameter.</td>
                </tr>
                <tr>
                    <td>Member name</td>
                    <td>Identifies the name of the PDS or PDSE member to which to write. Include this parameter for a PDS or PDSE member write request.</td>
                </tr>
                <tr>
                    <td>Content Type</td>
                    <td>The data is interpreted according to the content-type as one of binary, text, record or 'diff -e' format according a combination of the "Content-Type" and the value of the X-IBM-Data-Type custom header, if present.</td>
                </tr>
                <tr>
                    <td>X-IBM-Data-Type</td>
                    <td>When set to 'text' and "Content-Type" is "application/x-ibm-diff-e", the input consists of commands in the same format as produced by the z/OS UNIX 'diff -e' command. These commands are used to add, replace and delete lines in the target data set.</td>
                </tr>
                <tr>
                    <td>X-IBM-Migrated-Recall</td>
                    <td>This header is optional; use it to specify how a migrated data set is handled. By default, a migrated data set is recalled synchronously.</td>
                </tr>
                <tr>
                    <td>X-IBM-Obtain-ENQ</td>
                    <td>This header is optional; set it to one of the following values to request that a system ENQ be obtained and held after the completion of this request. If not specified, then no ENQs will be held after the completion of this request. A successful response will include an X-IBM-Session-Ref response header that can be added as a request header to subsequent requests to specify affinity to the TSO address space holding this ENQ.</td>
                </tr>
                <tr>
                    <td>X-IBM-Session-Ref</td>
                    <td>This header is optional; include it with the value returned from a previous X-IBM-Session-Ref response header to indicate that your request should be executed in the TSO address space that was previously reserved with a X-IBM-Obtain-ENQ request header. This address space will not be used for other requests and if not used at least once every 10 minutes it will be terminated. The X-IBM-Obtain-ENQ and X-IBM-Session-Ref headers are mutually exclusive.</td>
                </tr>
                <tr>
                    <td>X-IBM-Release-ENQ</td>
                    <td>This header is optional; it may be specified with a value "true" to request that the ENQ held by the associated TSO address space be released. This header must be specified along with a valid X-IBM-Session-Ref header.</td>
                </tr>
                <tr>
                    <td>Data</td>
                    <td>The data to write to dataset.</td>
                </tr>
                <tr>
                    <td>Data from file</td>
                    <td>The data to write to dataset. If file is not set then data from the property above is used.</td>
                </tr>
                 </tbody>
            </table>
        <!-- DataSetWritedatatoazOSdatasetormember END -->
            </div>
                <div id="DataSetDeleteasequentialandpartitioneddataset">
                <!-- DataSetDeleteasequentialandpartitioneddataset METADATA BEGIN -->
                <h3>Data Set - Delete a sequential and partitioned data set</h3>
                <p>You can use this operation to delete sequential and partitioned data sets on a z/OS system.</p>
                <!-- DataSetDeleteasequentialandpartitioneddataset METADATA END -->
                <!-- DataSetDeleteasequentialandpartitioneddataset BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td class="required">Data set name</td>
                    <td>The name of a z/OS data set, that you are going to delete.</td>
                </tr>
                <tr>
                    <td>Volume</td>
                    <td>Volume is where the data set is resided, when the data set is uncatalogued.</td>
                </tr>
                 </tbody>
            </table>
        <!-- DataSetDeleteasequentialandpartitioneddataset END -->
            </div>
                <div id="DataSetList">
                <!-- DataSetList METADATA BEGIN -->
            <h3>Data Set - List</h3>
            <p>List the z/OS data sets on a system.</p>
        <!-- DataSetList METADATA END -->
                <!-- DataSetList BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td class="required">Dslevel</td>
                    <td>The search parameter that identifies the cataloged data sets to be listed.</td>
                </tr>
                <tr>
                    <td>Volser</td>
                    <td>A parameter that identifies the volume serials to be searched for data sets with names that match the specified dslevel parameter.</td>
                </tr>
                <tr>
                    <td>Start</td>
                    <td>An optional search parameter that specifies the first data set name to return in the response document. The length of the data set name that you specify cannot exceed 44 characters, and cannot contain wildcards. If the data set name is not found for the given search, then the next data set matching the search will be returned.</td>
                </tr>
                <tr>
                    <td>X-IBM-Attributes. If not set - dsname used.</td>
                    <td>Extends search.</td>
                </tr>
                <tr>
                    <td>Max items returned (1000 max, 0 means no limit)</td>
                    <td>This header value specifies the maximum number of items to return. To request that all items be returned, set this header to 0. If you omit this header, or specify an incorrect value, up to 1000 items are returned by default.</td>
                </tr>
                <tr>
                    <td>Return totalRows</td>
                    <td>If checked, then "totalRows" property is returned if more data sets than the maximum requested are available.</td>
                </tr>
                 </tbody>
            </table>
        <!-- DataSetList END -->
            </div>
            <div id="DataSetWritedata">
                <a name="DataSetWritedata" id="DataSetWritedata" />
                <h3>Data Set - Write data</h3>
                <p>You can use this operation to write data to an existing sequential data set, or a member of a partitioned data set (PDS or PDSE). To write to an uncataloged data set, include a volume serial on the request.</p>
                <!-- DataSetWritedata BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td class="required">Data set name</td>
                    <td>The name of a z/OS data set that you are going to create.</td>
                </tr>
                <tr>
                    <td>Volser</td>
                    <td>A parameter that identifies the volume serials to be searched for data sets with names that match the specified dslevel parameter.</td>
                </tr>
                <tr>
                    <td>Member name</td>
                    <td>Identifies the name of the PDS or PDSE member to which to write. Include this parameter for a PDS or PDSE member write request.</td>
                </tr>
                <tr>
                    <td>Content Type</td>
                    <td>The data is interpreted according to the content-type as one of binary, text, record or 'diff -e' format according a combination of the "Content-Type" and the value of the X-IBM-Data-Type custom header, if present.</td>
                </tr>
                <tr>
                    <td>X-IBM-Data-Type</td>
                    <td>When set to 'text' and "Content-Type" is "application/x-ibm-diff-e", the input consists of commands in the same format as produced by the z/OS UNIX 'diff -e' command. These commands are used to add, replace and delete lines in the target data set.</td>
                </tr>
                <tr>
                    <td>X-IBM-Migrated-Recall</td>
                    <td>This header is optional; use it to specify how a migrated data set is handled. By default, a migrated data set is recalled synchronously.</td>
                </tr>
                <tr>
                    <td>X-IBM-Obtain-ENQ</td>
                    <td>This header is optional; set it to one of the following values to request that a system ENQ be obtained and held after the completion of this request. If not specified, then no ENQs will be held after the completion of this request. A successful response will include an X-IBM-Session-Ref response header that can be added as a request header to subsequent requests to specify affinity to the TSO address space holding this ENQ.</td>
                </tr>
                <tr>
                    <td>X-IBM-Session-Ref</td>
                    <td>This header is optional; include it with the value returned from a previous X-IBM-Session-Ref response header to indicate that your request should be executed in the TSO address space that was previously reserved with a X-IBM-Obtain-ENQ request header. This address space will not be used for other requests and if not used at least once every 10 minutes it will be terminated. The X-IBM-Obtain-ENQ and X-IBM-Session-Ref headers are mutually exclusive.</td>
                </tr>
                <tr>
                    <td>X-IBM-Release-ENQ</td>
                    <td>This header is optional; it may be specified with a value "true" to request that the ENQ held by the associated TSO address space be released. This header must be specified along with a valid X-IBM-Session-Ref header.</td>
                </tr>
                <tr>
                    <td>Data</td>
                    <td>The data to write to dataset.</td>
                </tr>
                <tr>
                    <td>Data from file</td>
                    <td>The data to write to dataset. If file is not set then data from the property above is used.</td>
                </tr>
                 </tbody>
            </table>
        <!-- DataSetWritedata END -->
            </div>
                <div id="DataSetCreate">
                <!-- DataSetCreate METADATA BEGIN -->
            <h3>Data Set - Create</h3>
            <p>You can use this operation to create sequential and partitioned data sets on a z/OS system.</p>
        <!-- DataSetCreate METADATA END -->
                <!-- DataSetCreate BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td class="required">Data set name</td>
                    <td>The name of a z/OS data set that you are going to create.</td>
                </tr>
                <tr>
                    <td>Volser</td>
                    <td>A parameter that identifies the volume serials to be searched for data sets with names that match the specified dslevel parameter.</td>
                </tr>
                <tr>
                    <td>Unit</td>
                    <td>Device type.</td>
                </tr>
                <tr>
                    <td>Dsorg</td>
                    <td>Data set organization.</td>
                </tr>
                <tr>
                    <td>Alcunit</td>
                    <td>Unit of space allocation.</td>
                </tr>
                <tr>
                    <td>Primary</td>
                    <td>Primary space allocation.</td>
                </tr>
                <tr>
                    <td>Secondary</td>
                    <td>Secondary space allocation.</td>
                </tr>
                <tr>
                    <td>Dirblk</td>
                    <td>Number of directory blocks.</td>
                </tr>
                <tr>
                    <td>Avgblk</td>
                    <td>Average block.</td>
                </tr>
                <tr>
                    <td>Recfm</td>
                    <td>Record format.</td>
                </tr>
                <tr>
                    <td>Blksize</td>
                    <td>Block size.</td>
                </tr>
                <tr>
                    <td>Lrecl</td>
                    <td>Record length.</td>
                </tr>
                <tr>
                    <td>Storeclass</td>
                    <td>Storage class.</td>
                </tr>
                <tr>
                    <td>Mgntclass</td>
                    <td>Storage class.</td>
                </tr>
                <tr>
                    <td>Dataclass</td>
                    <td>Data class.</td>
                </tr>
                 </tbody>
            </table>
        <!-- DataSetCreate END -->
            </div>
                <div id="DataSetDelete">
                <!-- DataSetDelete METADATA BEGIN -->
            <h3>Data Set - Delete</h3>
            <p>You can use this operation to delete sequential and partitioned data sets on a z/OS system.</p>
        <!-- DataSetDelete METADATA END -->
                <!-- DataSetDelete BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td class="required">Data set name</td>
                    <td>The name of a z/OS data set, that you are going to delete.</td>
                </tr>
                <tr>
                    <td>Volume</td>
                    <td>Volume is where the data set is resided, when the data set is uncatalogued.</td>
                </tr>
                 </tbody>
            </table>
        <!-- DataSetDelete END -->
            </div>
            <div id="DataSetReaddata">
                <a name="DataSetReaddata" id="DataSetReaddata" />
                <h3>Data Set - Read data</h3>
                <p>You can use this operation to retrieve the contents of a sequential data set, or a member of a partitioned data set (PDS or PDSE). To retrieve the contents of an uncataloged data set, include the volume serial on the request.</p>
                <!-- DataSetReaddata BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td class="required">Data set name</td>
                    <td>The name of a z/OS data set that you are going to create.</td>
                </tr>
                <tr>
                    <td>Volser</td>
                    <td>A parameter that identifies the volume serials to be searched for data sets with names that match the specified dslevel parameter.</td>
                </tr>
                <tr>
                    <td>Member name</td>
                    <td>Identifies the name of the PDS or PDSE member to which to write. Include this parameter for a PDS or PDSE member write request.</td>
                </tr>
                <tr>
                    <td>If-None-Match</td>
                    <td>This header is optional; use it to specify the ETag token to be used to correlate this request with a previous request. If the data on the z/OS host has not changed since the ETag token was generated, z/OSMF returns a status of HTTP 304 Not Modified. For the initial request to the resource, you can omit this header.</td>
                </tr>
                <tr>
                    <td>X-IBM-Data-Type</td>
                    <td>This header is optional; use it to indicate whether data conversion is to be performed on the returned data. When set to text, data conversion is performed. The data transfer process converts each record from EBCDIC to the charset specified on the "Content-Type" header of the request. If no charset is specified, the default is ISO8859-1. A newline (NL) character from the response charset is inserted between logical records. For data sets with fixed-length records, trailing blanks are removed. When set to binary, no data conversion is performed. The data transfer process returns each record as-is, without translation. No delimiters are added between records. The response Content-Type is "application/octet-stream". When set to record, no data conversion is performed. Each logical record is preceded by the 4-byte big endian record length of the record that follows. This length does not include the prefix length. So, a zero-length record is 4 bytes of zeros with nothing following. If you omit this header, the default is text; the response is converted.</td>
                </tr>
                <tr>
                    <td>X-IBM-Return-Etag</td>
                    <td>This header is optional; set it to 'true' to force the response to include an "Etag" header, regardless of the size of the response data. If this header is not present or set to something other than 'true', then the default is to only send an Etag in the response for data sets smaller than a system determined length, which is at least 8MB. If X-IBM-Record-Range is present, then this header may not be specified with the value "true" and an Etag will never be returned.End of change. If this header is enabled for very large data sets, then performance is impacted since the data set must be read twice by the system.</td>
                </tr>
                <tr>
                    <td>X-IBM-Migrated-Recall</td>
                    <td>This header is optional; use it to specify how a migrated data set is handled. By default, a migrated data set is recalled synchronously.</td>
                </tr>
                <tr>
                    <td>X-IBM-Record-Range</td>
                    <td><pre>Use this header to retrieve a range of records from a data set. You can specify this range using either of the following formats:
SSS-EEE
Where SSS identifies the start record and EEE identifies the end record to be retrieved. Both values are relative offsets (0-based).
When EEE is set to 0, records through the end of the data set are retrieved.
When SSS is omitted (i.e. -EEE), the final EEE records of the data set are retrieved.
SSS,NNN
Where SSS identifies the start record and NNN identifies the number of records to be retrieved.
NNN must be greater than zero.
Usage notes:
If X-IBM-Record-Range is specified, then an ETag header will not be returned and the If-None-Match request header is ignored.
If X-IBM-Record-Range header is present on the request, then header X-IBM-Return-Etag=true may not be specified.
If no records are found in the range specified, an exception is returned.</pre></td>
                </tr>
                <tr>
                    <td>X-IBM-Obtain-ENQ</td>
                    <td>This header is optional; set it to one of the following values to request that a system ENQ be obtained and held after the completion of this request. If not specified, then no ENQs will be held after the completion of this request. A successful response will include an X-IBM-Session-Ref response header that can be added as a request header to subsequent requests to specify affinity to the TSO address space holding this ENQ.</td>
                </tr>
                <tr>
                    <td>X-IBM-Session-Ref</td>
                    <td>This header is optional; include it with the value returned from a previous X-IBM-Session-Ref response header to indicate that your request should be executed in the TSO address space that was previously reserved with a X-IBM-Obtain-ENQ request header. This address space will not be used for other requests and if not used at least once every 10 minutes it will be terminated. The X-IBM-Obtain-ENQ and X-IBM-Session-Ref headers are mutually exclusive.</td>
                </tr>
                <tr>
                    <td>X-IBM-Release-ENQ</td>
                    <td>This header is optional; it may be specified with a value "true" to request that the ENQ held by the associated TSO address space be released. This header must be specified along with a valid X-IBM-Session-Ref header.</td>
                </tr>
                 </tbody>
            </table>
        <!-- DataSetReaddata END -->
            </div>
                <div id="JobsSpoolfileslist">
                <!-- JobsSpoolfileslist METADATA BEGIN -->
            <h3>Jobs - Spool files list</h3>
            <p>You can use this operation to list the spool files for a batch job on z/OS.</p>
        <!-- JobsSpoolfileslist METADATA END -->
                <!-- JobsSpoolfileslist BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td>Jobname</td>
                    <td>Identifies the job for which the spool files are to be listed. Use either the job name and job ID combination or the job correlator to identify the job.</td>
                </tr>
                <tr>
                    <td>Jobid</td>
                    <td>Identifies the job for which the spool files are to be listed. Use either the job name and job ID combination or the job correlator to identify the job.</td>
                </tr>
                <tr>
                    <td>Correlator</td>
                    <td><pre>Identifies the job for which the spool files are to be listed. Use either the job name and job ID combination or the job correlator to identify the job.
To use a job correlator on this request, specify the full job correlator for the job: The 31-byte system portion, a semicolon, and the user portion (up to 32 bytes). 
The correlator can be one that you have obtained from the "job-correlator" property in a returned JSON job document. Alternatively, you can specify the complete URL as provided in the "url" property of a JSON job document.</pre></td>
                </tr>
                 </tbody>
            </table>
        <!-- JobsSpoolfileslist END -->
            </div>
                <div id="JobsGetspoolfilecontent">
                <!-- JobsGetspoolfilecontent METADATA BEGIN -->
            <h3>Jobs - Get spool file content</h3>
            <p>You can use this operation to list the spool files for a batch job on z/OS.</p>
        <!-- JobsGetspoolfilecontent METADATA END -->
                <!-- JobsGetspoolfilecontent BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td>Jobname</td>
                    <td>Identifies the job for which the spool files are to be listed. Use either the job name and job ID combination or the job correlator to identify the job.</td>
                </tr>
                <tr>
                    <td>Jobid</td>
                    <td>Identifies the job for which the spool files are to be listed. Use either the job name and job ID combination or the job correlator to identify the job.</td>
                </tr>
                <tr>
                    <td>Correlator</td>
                    <td>Identifies the job for which the spool files are to be listed. Use either the job name and job ID combination or the job correlator to identify the job.
To use a job correlator on this request, specify the full job correlator for the job: The 31-byte system portion, a semicolon, and the user portion (up to 32 bytes). The correlator can be one that you have obtained from the "job-correlator" property in a returned JSON job document.</td>
                </tr>
                <tr>
                    <td>X-IBM-Record-Range</td>
                    <td><pre>Use this header to retrieve a range of records from a spool file. You can specify this range using either of the following formats:
SSS-EEE
where SSS identifies the start record and EEE identifies the end record to be retrieved. Both values are relative offsets (0-based). When EEE is set to 0, records through the end of the spool file are retrieved.
SSS,NNN
where SSS identifies the start record and NNN identifies the number of records to be retrieved.</pre></td>
                </tr>
                <tr>
                    <td>Mode</td>
                    <td><pre style="white-space:pre-wrap; word-wrap:break-word;">text
The z/OS jobs REST interface translates records from the server codepage to the client codepage and returns the records with Content-Type: plain/text. Trailing spaces are removed and newline characters are used as record separators. This value is the default if you omit the mode parameter.
binary
The z/OS jobs REST interface performs no translation and returns the records with Content-Type: application/octet-stream.
record
The z/OS jobs REST interface performs no translation and returns the records with Content-Type: application/octet-stream. The z/OS jobs REST interface prefixes each record with a 4-byte (big endian) length.</pre></td>
                </tr>
                <tr>
                    <td>JESB</td>
                    <td>Represents an optionally-specified secondary JES subsystem. A request to a secondary JES subsystem must include the job name and job id, rather than a job correlator.</td>
                </tr>
                <tr>
                    <td>Files NNNs</td>
                    <td>Comma separated files list to retrieve</td>
                </tr>
                <tr>
                    <td>Retrieve job's JCL</td>
                    <td>Pushes to retrieve the JCL for the specified job.</td>
                </tr>
                 </tbody>
            </table>
        <!-- JobsGetspoolfilecontent END -->
            </div>
                <div id="JobsList">
                <!-- JobsList METADATA BEGIN -->
            <h3>Jobs - List</h3>
            <p>You can use this operation to list the jobs for an owner, prefix, or job ID.</p>
        <!-- JobsList METADATA END -->
                <!-- JobsList BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td>Owner</td>
                    <td>User ID of the job owner whose jobs are being queried; the default is the z/OS user ID. Folded to uppercase; cannot exceed eight characters.</td>
                </tr>
                <tr>
                    <td>Prefix</td>
                    <td>Job name prefix; defaults is *. Folded to uppercase; cannot exceed eight characters.</td>
                </tr>
                <tr>
                    <td>Jobid</td>
                    <td>JobidJob ID. Folded to uppercase; cannot exceed eight characters. This query parameter is mutually exclusive with user-correlator.</td>
                </tr>
                <tr>
                    <td>Max-jobs</td>
                    <td>Maximum number of jobs returned. The value must be between 1 and 1000, inclusive. If this parameter is not specified, or is specified incorrectly, the default value of 1000 is used.</td>
                </tr>
                <tr>
                    <td>User-correlator</td>
                    <td><pre style="white-space:pre-wrap; word-wrap:break-word;">The user portion of the job correlator. This value is 1 - 32 characters in length, where the first character must be uppercase alphabetic (A-Z) or special ($, #, @). The remaining characters (up to 31) can be any combination of uppercase alphabetic, numeric (0-9), or special. Blank characters are not supported.
This query parameter is mutually exclusive with jobid.
This value is processed by the JES2 subsystem only; the JES3 subsystem does not process the correlator and, instead, indicates zero job matches. For a system with JES3 as the primary subsystem, and one or more JES2 secondary subsystems, the primary JES3 subsystem does not process the correlator, however, the JES2 secondary subsystems can process the correlator.</pre></td>
                </tr>
                 </tbody>
            </table>
        <!-- JobsList END -->
            </div>
                <div id="JobsCancelandPurge">
                <!-- JobsCancelandPurge METADATA BEGIN -->
            <h3>Jobs - Cancel and Purge</h3>
            <p>You can use this operation to cancel a job and purge its output.</p>
        <!-- JobsCancelandPurge METADATA END -->
                <!-- JobsCancelandPurge BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td>Jobname</td>
                    <td>Identifies the job for which the spool files are to be listed. Use either the job name and job ID combination or the job correlator to identify the job.</td>
                </tr>
                <tr>
                    <td>Jobid</td>
                    <td>Identifies the job for which the spool files are to be listed. Use either the job name and job ID combination or the job correlator to identify the job.</td>
                </tr>
                <tr>
                    <td>Correlator</td>
                    <td><pre>Identifies the job for which the spool files are to be listed. Use either the job name and job ID combination or the job correlator to identify the job.
To use a job correlator on this request, specify the full job correlator for the job: The 31-byte system portion, a semicolon, and the user portion (up to 32 bytes). 
The correlator can be one that you have obtained from the "job-correlator" property in a returned JSON job document. Alternatively, you can specify the complete URL as provided in the "url" property of a JSON job document.</pre></td>
                </tr>
                <tr>
                    <td>X-IBM-Job-Modify-Version</td>
                    <td><pre style="white-space:pre-wrap; word-wrap:break-word;">Use this header to specify whether the request is to be processed asynchronously or synchronously, as follows:
1.0
Specifies that the request is to be processed asynchronously. In response, the caller receives an HTTP status code of 202 Accepted, with no indication of the success or failure of the request. To verify that the initial request was performed, the caller can issue the service described in Obtain the status of a job.
2.0
Specifies that the request is to be processed synchronously. In response, the caller receives an HTTP status code, which indicates the results of the request. For a successful request, the caller also receives the JSON job feedback document, which includes details about the job that was cancelled.
If this header is omitted, the request is processed asynchronously by default.
Synchronous processing is supported for JES2 only. On systems running JES3, the z/OS jobs REST interface services must run asynchronously.</pre></td>
                </tr>
                 </tbody>
            </table>
        <!-- JobsCancelandPurge END -->
            </div>
                <div id="JobsObtainstatus">
                <!-- JobsObtainstatus METADATA BEGIN -->
            <h3>Jobs - Obtain status</h3>
            <p>You can use this operation to obtain the status of a batch job on z/OS</p>
        <!-- JobsObtainstatus METADATA END -->
                <!-- JobsObtainstatus BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td>Jobname</td>
                    <td>Identifies the job. Use either the job name and job ID combination or the job correlator to identify the job.</td>
                </tr>
                <tr>
                    <td>Jobid</td>
                    <td>Identifies the job. Use either the job name and job ID combination or the job correlator to identify the job.</td>
                </tr>
                <tr>
                    <td>Correlator</td>
                    <td>Identifies the job. Use either the job name and job ID combination or the job correlator to identify the job.
To use a job correlator on this request, specify the full job correlator for the job: The 31-byte system portion, a semicolon, and the user portion (up to 32 bytes). The correlator can be one that you have obtained from the "job-correlator" property in a returned JSON job document.</td>
                </tr>
                <tr>
                    <td>Wait for the Job Status</td>
                    <td>This param tells to procedure to wait until the status of the job is changed in set param. Checks are being done every 10 seconds. Timing out(if parameter is set) will push this procedure to fail.</td>
                </tr>
                <tr>
                    <td>Timeout</td>
                    <td>Timeout in seconds. If procedure works or awaits more then Timeout, then it will fail.</td>
                </tr>
                 </tbody>
            </table>
        <!-- JobsObtainstatus END -->
            </div>
                <div id="SystemInfo">
                <!-- SystemInfo METADATA BEGIN -->
            <h3>System - Info</h3>
            <p>You can use this operation to retrieve information about z/OSMF on a particular z/OS system.</p>
        <!-- SystemInfo METADATA END -->
                <!-- SystemInfo BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                 </tbody>
            </table>
        <!-- SystemInfo END -->
            </div>
                <div id="ConsoleIssueCommand">
                <!-- ConsoleIssueCommand METADATA BEGIN -->
            <h3>Console - Issue Command</h3>
            <p>Use this operation to issue a command by using a system console.</p>
        <!-- ConsoleIssueCommand METADATA END -->
                <!-- ConsoleIssueCommand BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td>Consolename</td>
                    <td>It is the name of the EMCS console that is used to issue the command. The name must be 2 - 8 characters long, and cannot be defcn, which is reserved.</td>
                </tr>
                <tr>
                    <td>defcn</td>
                    <td>Indicates that the name of the console that is used to issue the command is generated by the REST Console API, by adding CN to the logon user ID. For example, if the logon user ID is CJOEY, the console name is CJOEYCN. If the user ID is longer than 6 characters, the user ID is truncated. For example, if the user ID is ZOSMFAD, then the console name is ZOSMFACN.</td>
                </tr>
                <tr>
                    <td class="required">Command</td>
                    <td>Specifies the command to issue.</td>
                </tr>
                <tr>
                    <td>Sol-key</td>
                    <td>Specifies a keyword that you want to detect in solicited messages, that is, the command response. Case is not significant.</td>
                </tr>
                <tr>
                    <td>Detect-time</td>
                    <td>Indicates how long the console attempts to detect the value of unsol-key in the unsolicited messages. The unit is seconds. For example, if the value of detect-time is 10, the console checks the unsolicited messages for 10 seconds. The default is 30 seconds.</td>
                </tr>
                <tr>
                    <td>Async</td>
                    <td>Indicates the method of issuing the command:
Y
Asynchronously
N
Synchronously. This is the default.</td>
                </tr>
                <tr>
                    <td>System</td>
                    <td>Name of the system in the same sysplex that the command is routed to. The default is the local system.</td>
                </tr>
                <tr>
                    <td>Unsol-detect-sync</td>
                    <td><pre style="white-space:pre-wrap; word-wrap:break-word;">Indicates how to detect the keyword that is specified with the unsol-key field from unsolicited messages:
Y
Synchronously detect the keyword from unsolicited messages. The request is not returned until the unsol-detect-timeout value has elapsed or the detection result is complete.
N
Asynchronously detect the keyword from unsolicited messages. The request is returned immediately with the detection-url. The client application must invoke the value of detection-url to poll the result of the detection asynchronously. This is the default is the field is not specified.</pre></td>
                </tr>
                <tr>
                    <td>Unsol-detect-timeout</td>
                    <td>Indicates how long, in seconds, the request is blocked when the value for unsol-detect-sync is Y and the detection result has not been completed. The default value, 20 seconds, is used when this field is not specified and the value for unsol-detect-sync is Y.</td>
                </tr>
                 </tbody>
            </table>
        <!-- ConsoleIssueCommand END -->
            </div>
                <div id="ConsoleCommandresponse">
                <!-- ConsoleCommandresponse METADATA BEGIN -->
            <h3>Console - Command response</h3>
            <p>Use this operation to get the response to a command that was issued asynchronously with the Issue Command service.</p>
        <!-- ConsoleCommandresponse METADATA END -->
                <!-- ConsoleCommandresponse BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td>Consolename</td>
                    <td>It is the name of the EMCS console that is used to issue the command. The name must be 2 - 8 characters long, and cannot be defcn, which is reserved.</td>
                </tr>
                <tr>
                    <td>defcn</td>
                    <td>Indicates that the name of the console that is used to issue the command is generated by the REST Console API, by adding CN to the logon user ID. For example, if the logon user ID is CJOEY, the console name is CJOEYCN. If the user ID is longer than 6 characters, the user ID is truncated. For example, if the user ID is ZOSMFAD, then the console name is ZOSMFACN.</td>
                </tr>
                <tr>
                    <td class="required">Ckey-number</td>
                    <td>Specifies the command to issue.</td>
                </tr>
                 </tbody>
            </table>
        <!-- ConsoleCommandresponse END -->
            </div>
                <div id="ConsoleUnsolicitedmessagesresult">
                <!-- ConsoleUnsolicitedmessagesresult METADATA BEGIN -->
            <h3>Console - Unsolicited messages result</h3>
            <p>Use this operation to get the result for detecting a keyword in unsolicited messages after an Issue Command request. The command must have been issued with the unsol-key field.</p>
        <!-- ConsoleUnsolicitedmessagesresult METADATA END -->
                <!-- ConsoleUnsolicitedmessagesresult BEGIN -->
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td>Consolename</td>
                    <td>It is the name of the EMCS console that is used to issue the command. The name must be 2 - 8 characters long, and cannot be defcn, which is reserved.</td>
                </tr>
                <tr>
                    <td>defcn</td>
                    <td>Indicates that the name of the console that is used to issue the command is generated by the REST Console API, by adding CN to the logon user ID. For example, if the logon user ID is CJOEY, the console name is CJOEYCN. If the user ID is longer than 6 characters, the user ID is truncated. For example, if the user ID is ZOSMFAD, then the console name is ZOSMFACN.</td>
                </tr>
                <tr>
                    <td class="required">Dkey-number</td>
                    <td>Specifies the command to issue.</td>
                </tr>
                 </tbody>
            </table>
        <!-- ConsoleUnsolicitedmessagesresult END -->
            </div>
<!-- PROCEDURES END -->
    </div>
    <!-- RELEASE NOTES BEGIN -->
    <!-- RELEASE NOTES END -->
</body>
</html>
